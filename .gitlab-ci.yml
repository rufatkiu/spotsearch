image: $CI_REGISTRY_IMAGE/env:latest

stages:
 - check
 - build
 - test
 - deploy

services:  
  - docker:20.10-dind 

python:
  stage: check
  script:
    - ./manage test.black
    - ./manage test.pylint

build:web:
  stage: build
  script:
    - ./manage node.env
    - ./manage themes.etheme
    - ./manage babel.compile

.build:docker:
  stage: build
  image: docker:git
  tags:
    - generic_privileged
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build:docker:
  extends: .build:docker
  only:
    - branches

build:docker:tags:
  extends: .build:docker
  script:
    - docker build --build-arg SEARXNG_GIT_VERSION="${CI_COMMIT_TAG}" -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  only:
    - tags

test:unit:
  stage: test
  script:
    - ./manage test.coverage
  coverage: '/TOTAL.*\s+(\d+%)$/'

.deploy:template:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_ED" > $HOME/.ssh/id_ed25519
    - echo "$SSH_PUBKEY_ED" > $HOME/.ssh/id_ed25519.pub
    - echo "$SSH_KNOWN_HOSTS" > $HOME/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 644 ~/.ssh/known_hosts ~/.ssh/id_ed25519.pub
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - echo "Deploying to ($SSH_USER@$BACKEND_HOST)" 
    - ssh $SSH_USER@$BACKEND_HOST "cd $DEPLOYMENT_PATH && git stash && git pull && git checkout $BRANCH && rm .env .env.prod && rm docker-compose.yml && mv docker-compose.prod.yml docker-compose.yml"
    - scp $ENV_FILE $SSH_USER@$BACKEND_HOST:$DEPLOYMENT_PATH/.env
    - ssh $SSH_USER@$BACKEND_HOST "cd $DEPLOYMENT_PATH
      && sed -i 's/SPOT_DOCKER_TAG=master/SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG/g' .env 
      && docker-compose pull && docker-compose stop filtron && sleep 2 && docker-compose up -d && docker-compose restart spot-nginx"

deploy:spot.murenatest.io.backend1:
  extends: .deploy:template
  when: manual
  only:
    - /^dev\/.*$/
    - master
  environment:
    name: eeo1
    deployment_tier: staging
    url: https://spot.murenatest.io
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND_HOST}
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    BRANCH: ${CI_COMMIT_REF_NAME}

deploy:spot.murenatest.io.backend2:
  extends: .deploy:template
  when: manual
  only:
    - /^dev\/.*$/
    - master
  environment:
    name: eeo2
    deployment_tier: staging
    url: https://spot.murenatest.io
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND_HOST}
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    BRANCH: ${CI_COMMIT_REF_NAME}

deploy:spot.murena.io.backend1:
  extends: .deploy:template
  only:
    - tags
  when: manual
  environment:
    name: ecloud1
    deployment_tier: production
    url: https://spot.murena.io
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND_HOST}
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    BRANCH: master

deploy:spot.murena.io.backend2:
  extends: .deploy:template
  only:
    - tags
  when: manual
  environment:
    name: ecloud2
    deployment_tier: production
    url: https://spot.murena.io
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND_HOST}
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    BRANCH: master
