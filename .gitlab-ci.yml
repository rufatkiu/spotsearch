image: $CI_REGISTRY_IMAGE/env:latest

stages:
 - check
 - build
 - test
 - deploy
 - update-from-upstream

services:  
  - docker:20.10-dind 

searx:
  stage: update-from-upstream
  image: registry.gitlab.e.foundation/e/tools/docker-tools:latest
  only:
    - schedules
  variables:
    GIT_STRATEGY: none
    CI_PROJECT_SSH_URL: git@gitlab.e.foundation:$CI_PROJECT_PATH
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "${SSH_E_ROBOT_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${SSH_KNOWN_HOSTS}" > /root/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email $GITLAB_USER_EMAIL
    - git config --global user.name "$GITLAB_USER_NAME"
    - rm -rf $CI_PROJECT_DIR
    - git clone $CI_PROJECT_SSH_URL $CI_PROJECT_DIR
    - cd $CI_PROJECT_DIR
  script:
    - git fetch origin
    - BRANCH_NAME=$(date +%F-%H%M)-searx
    - git checkout -b $BRANCH_NAME
    - git remote add upstream $UPSTREAM_REPO
    - git pull upstream $UPSTREAM_BRANCH || true
    - if ! (git diff --exit-code > /dev/null) || ! (git diff --exit-code > /dev/null) || ! [[ -z "$(git status --porcelain)" ]] ; then
         echo "Changes detected, committing to origin/$BRANCH_NAME...";
      else
        echo "Everything is up to date, nothing to commit";
        exit 0;
      fi
    - git add .
    - git commit -m "sync changes from upstream"
    - git push origin $BRANCH_NAME
    - curl -X POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests" --header "TOKEN:$CI_JOB_TOKEN" --header "Content-Type:application/json" --data '{ "title":"Sync changes from searx","source_branch":$BRANCH_NAME,"target_branch":"master","assignee_id":$MR_ASSIGNEE_ID}'

python:
  stage: check
  only:
    - tags
    - branches
  except:
    - schedules
  script:
    - ./manage test.pep8
    - ./manage test.pylint

build:web:
  stage: build
  only:
    - tags
    - branches
  except:
    - schedules
  before_script:
    - ./manage node.update
    - ./manage node.env
  script:
    - ./manage themes.etheme
    - ./manage babel.compile

.build:docker:
  stage: build
  image: docker:git
  tags:
    - generic_privileged
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/env 
    - docker tag $CI_REGISTRY_IMAGE/env base-env-image
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build:docker:
  only:
    - tags
    - branches
  except:
    - schedules
  extends: .build:docker

build:docker:tags:
  extends: .build:docker
  script:
    - docker pull $CI_REGISTRY_IMAGE/env 
    - docker tag $CI_REGISTRY_IMAGE/env base-env-image
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  only:
    - tags

test:unit:
  stage: test
  only:
    - tags
    - branches
  except:
    - schedules
  script:
    - ./manage test.coverage
  coverage: '/TOTAL.*\s+(\d+%)$/'

.deploy:template:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_ED" > $HOME/.ssh/id_ed25519
    - echo "$SSH_PUBKEY_ED" > $HOME/.ssh/id_ed25519.pub
    - echo "$SSH_KNOWN_HOSTS" > $HOME/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 644 ~/.ssh/known_hosts ~/.ssh/id_ed25519.pub
    - ssh $DOCKER_HOST "cd $PATH_STAGING"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/env

deploy:spot.eeo.one.backend1:
  extends: .deploy:template
  when: manual
  only:
    - branches
  except:
    - schedules
  environment:
    name: eeo1
    url: https://spot.eeo.one
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND1_HOST}
    SPOT_HOSTNAME: spot.eeo.one
    SEARX_PROXY_HTTP: http://proxy01.ecloud.global:1099
    SEARX_PROXY_HTTPS: http://proxy01.ecloud.global:1099
    COMPOSE_PROJECT_NAME: staging-spot
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    WIREGUARD_IP: ${BACKEND1_WG_IP}
    NODE_NAME: ${NODE_NAME}
    INTERNAL_NETWORK_NAME: staging-spot-default
    FILTRON_PORT: 8088
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND1_HOST - $BACKEND1_WG_IP - $WIREGUARD_IP)" 
    - ssh $SSH_USER@$BACKEND1_HOST "cd /mnt/repo-base/staging-spot && git reset --hard && git clean -xfdf && git pull && rm .env && mv .env.prod .env && rm docker-compose.yml && mv docker-compose.prod.yml docker-compose.yml"
    - ssh $SSH_USER@$BACKEND1_HOST "cd /mnt/repo-base/staging-spot 
      && sed -i 's/SPOT_HOSTNAME=spot.ecloud.global/SPOT_HOSTNAME=$SPOT_HOSTNAME/g' .env 
      && sed -i 's/SPOT_DOCKER_TAG=latest/SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG/g' .env 
      && sed -i 's/SECRET2BEREPLACED/$SEARX_SECRET/g' .env
      && sed -i 's/proxy01.ecloud.global/proxy01.ecloud.global/g' .env
      && sed -i 's/WIREGUARD_IP=127.0.0.1/WIREGUARD_IP=$WIREGUARD_IP/g' .env 
      && sed -i 's/FILTRON_PORT=8088/FILTRON_PORT=$FILTRON_PORT/g' .env
      && sed -i 's/INTERNAL_NETWORK_NAME=default/INTERNAL_NETWORK_NAME=$INTERNAL_NETWORK_NAME/g' .env
      && sed -i 's/NODE_NAME=spot11/NODE_NAME=$NODE_NAME/g' .env
      && sed -i 's/ENVIRONMENT_NAME=prod/ENVIRONMENT_NAME=$ENVIRONMENT_NAME/g' .env
      && sed -i 's|SENTRY_DSN=public_key:gitlab.com|SENTRY_DSN=$SENTRY_DSN|g' .env
      && sed -i 's|SENTRY_TRACES_SAMPLE_RATE=1.0|SENTRY_TRACES_SAMPLE_RATE=$SENTRY_TRACES_SAMPLE_RATE|g' .env
      && sed -i 's|CI_REGISTRY_IMAGE=image|CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE|g' .env
      && docker-compose pull && docker-compose stop filtron && sleep 2 && docker-compose up -d"

deploy:spot.eeo.one.backend2:
  extends: .deploy:template
  when: manual
  only:
    - branches
  except:
    - schedules
  environment:
    name: eeo2
    url: https://spot.eeo.one
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND2_HOST}
    SPOT_HOSTNAME: spot.eeo.one
    SEARX_PROXY_HTTP: http://proxy02.ecloud.global:1099
    SEARX_PROXY_HTTPS: http://proxy02.ecloud.global:1099
    COMPOSE_PROJECT_NAME: staging-spot
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    WIREGUARD_IP: ${BACKEND2_WG_IP}
    INTERNAL_NETWORK_NAME: staging-spot-default
    NODE_NAME: ${NODE_NAME}
    FILTRON_PORT: 8088
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND2_HOST - $BACKEND2_WG_IP - $WIREGUARD_IP)" 
    - ssh $SSH_USER@$BACKEND2_HOST "cd /mnt/repo-base/staging-spot && git reset --hard && git clean -xfdf && git pull && rm .env && mv .env.prod .env && rm docker-compose.yml && mv docker-compose.prod.yml docker-compose.yml"
    - ssh $SSH_USER@$BACKEND2_HOST "cd /mnt/repo-base/staging-spot 
      && sed -i 's/SPOT_HOSTNAME=spot.ecloud.global/SPOT_HOSTNAME=$SPOT_HOSTNAME/g' .env 
      && sed -i 's/SPOT_DOCKER_TAG=latest/SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG/g' .env 
      && sed -i 's/SECRET2BEREPLACED/$SEARX_SECRET/g' .env
      && sed -i 's/proxy01.ecloud.global/proxy02.ecloud.global/g' .env
      && sed -i 's/WIREGUARD_IP=127.0.0.1/WIREGUARD_IP=$WIREGUARD_IP/g' .env 
      && sed -i 's/FILTRON_PORT=8088/FILTRON_PORT=$FILTRON_PORT/g' .env
      && sed -i 's/INTERNAL_NETWORK_NAME=default/INTERNAL_NETWORK_NAME=$INTERNAL_NETWORK_NAME/g' .env
      && sed -i 's/NODE_NAME=spot11/NODE_NAME=$NODE_NAME/g' .env
      && sed -i 's/ENVIRONMENT_NAME=prod/ENVIRONMENT_NAME=$ENVIRONMENT_NAME/g' .env
      && sed -i 's|SENTRY_DSN=public_key:gitlab.com|SENTRY_DSN=$SENTRY_DSN|g' .env
      && sed -i 's|SENTRY_TRACES_SAMPLE_RATE=1.0|SENTRY_TRACES_SAMPLE_RATE=$SENTRY_TRACES_SAMPLE_RATE|g' .env
      && sed -i 's|CI_REGISTRY_IMAGE=image|CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE|g' .env
      && docker-compose pull && docker-compose stop filtron && sleep 5 && docker-compose up -d"

deploy:spot.ecloud.global.backend1:
  extends: .deploy:template
  only:
    - tags
  environment:
    name: ecloud1
    url: https://spot.ecloud.global
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND1_HOST}
    SPOT_HOSTNAME: spot.ecloud.global
    SEARX_PROXY_HTTP: http://proxy01.ecloud.global:1099
    SEARX_PROXY_HTTPS: http://proxy01.ecloud.global:1099
    COMPOSE_PROJECT_NAME: production-spot
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    WIREGUARD_IP: ${BACKEND1_WG_IP}
    INTERNAL_NETWORK_NAME: spot-default
    NODE_NAME: ${NODE_NAME}
    FILTRON_PORT: 8098
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND1_HOST - $BACKEND1_WG_IP - $WIREGUARD_IP)" 
    - ssh $SSH_USER@$BACKEND1_HOST "cd /mnt/repo-base/production-spot && git reset --hard && git clean -xfdf && git pull && rm .env && mv .env.prod .env && rm docker-compose.yml && mv docker-compose.prod.yml docker-compose.yml"
    - ssh $SSH_USER@$BACKEND1_HOST "cd /mnt/repo-base/production-spot 
      && sed -i 's/SPOT_HOSTNAME=spot.ecloud.global/SPOT_HOSTNAME=$SPOT_HOSTNAME/g' .env 
      && sed -i 's/SPOT_DOCKER_TAG=latest/SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG/g' .env 
      && sed -i 's/SECRET2BEREPLACED/$SEARX_SECRET/g' .env
      && sed -i 's/proxy01.ecloud.global/proxy01.ecloud.global/g' .env
      && sed -i 's/WIREGUARD_IP=127.0.0.1/WIREGUARD_IP=$WIREGUARD_IP/g' .env 
      && sed -i 's/FILTRON_PORT=8088/FILTRON_PORT=$FILTRON_PORT/g' .env
      && sed -i 's/INTERNAL_NETWORK_NAME=default/INTERNAL_NETWORK_NAME=$INTERNAL_NETWORK_NAME/g' .env
      && sed -i 's/NODE_NAME=spot11/NODE_NAME=$NODE_NAME/g' .env
      && sed -i 's/ENVIRONMENT_NAME=prod/ENVIRONMENT_NAME=$ENVIRONMENT_NAME/g' .env
      && sed -i 's|SENTRY_DSN=public_key:gitlab.com|SENTRY_DSN=$SENTRY_DSN|g' .env
      && sed -i 's|SENTRY_TRACES_SAMPLE_RATE=1.0|SENTRY_TRACES_SAMPLE_RATE=$SENTRY_TRACES_SAMPLE_RATE|g' .env
      && sed -i 's|CI_REGISTRY_IMAGE=image|CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE|g' .env
      && docker-compose pull && docker-compose stop filtron && sleep 2 && docker-compose up -d"

deploy:spot.ecloud.global.backend2:
  extends: .deploy:template
  only:
    - tags
  environment:
    name: ecloud2
    url: https://spot.ecloud.global
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND2_HOST}
    SPOT_HOSTNAME: spot.ecloud.global
    SEARX_PROXY_HTTP: http://proxy02.ecloud.global:1099
    SEARX_PROXY_HTTPS: http://proxy02.ecloud.global:1099
    COMPOSE_PROJECT_NAME: production-spot
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    WIREGUARD_IP: ${BACKEND2_WG_IP}
    INTERNAL_NETWORK_NAME: spot-default
    NODE_NAME: ${NODE_NAME}
    FILTRON_PORT: 8098
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND2_HOST - $BACKEND2_WG_IP - $WIREGUARD_IP)" 
    - ssh $SSH_USER@$BACKEND2_HOST "cd /mnt/repo-base/production-spot && git reset --hard && git clean -xfdf && git pull && rm .env && mv .env.prod .env && rm docker-compose.yml && mv docker-compose.prod.yml docker-compose.yml"
    - ssh $SSH_USER@$BACKEND2_HOST "cd /mnt/repo-base/production-spot 
      && sed -i 's/SPOT_HOSTNAME=spot.ecloud.global/SPOT_HOSTNAME=$SPOT_HOSTNAME/g' .env 
      && sed -i 's/SPOT_DOCKER_TAG=latest/SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG/g' .env 
      && sed -i 's/SECRET2BEREPLACED/$SEARX_SECRET/g' .env
      && sed -i 's/proxy01.ecloud.global/proxy02.ecloud.global/g' .env
      && sed -i 's/WIREGUARD_IP=127.0.0.1/WIREGUARD_IP=$WIREGUARD_IP/g' .env 
      && sed -i 's/FILTRON_PORT=8088/FILTRON_PORT=$FILTRON_PORT/g' .env
      && sed -i 's/INTERNAL_NETWORK_NAME=default/INTERNAL_NETWORK_NAME=$INTERNAL_NETWORK_NAME/g' .env
      && sed -i 's/NODE_NAME=spot11/NODE_NAME=$NODE_NAME/g' .env
      && sed -i 's/ENVIRONMENT_NAME=prod/ENVIRONMENT_NAME=$ENVIRONMENT_NAME/g' .env
      && sed -i 's|SENTRY_DSN=public_key:gitlab.com|SENTRY_DSN=$SENTRY_DSN|g' .env
      && sed -i 's|SENTRY_TRACES_SAMPLE_RATE=1.0|SENTRY_TRACES_SAMPLE_RATE=$SENTRY_TRACES_SAMPLE_RATE|g' .env
      && sed -i 's|CI_REGISTRY_IMAGE=image|CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE|g' .env
      && docker-compose pull && docker-compose stop filtron && sleep 2 && docker-compose up -d"

